name: Pull request status checks

on:
  # pull_request:
  #   branches:
  #     - main
  push:


jobs:
  do-checks:
    name: Pull request status checks
    runs-on: buildjet-4vcpu-ubuntu-2204

    # Set up testing service
    services:
      sorry-cypress:
        image: agoldis/sorry-cypress-director
        ports:
          - 1234:1234

    steps:
      # Clones repo to the commit that triggered the event
      - name: Cloning repository
        uses: actions/checkout@v3

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35
        # with:
        #   files_ignore: .*/**

      # Set up node
      - name: Set up frontend Node.js (.nvmrc)
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
      - name: Install frontend dependencies
        if: steps.changed-files.outputs.any_changed == 'true'
        run: npm i
      - name: Set up functions Node.js (.nvmrc)
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/setup-node@v3
        with:
          node-version-file: "functions/.nvmrc"
          cache: "npm"


      # - name: Install functions dependencies
      #   if: steps.changed-files.outputs.any_changed == 'true'
      #   run: npm i
      #   working-directory: functions

      # Set up gcloud projects for functions
      # DO NOT do this on s public repo
      # - name: "Gcloud auth for PROD firebase"
      #   uses: "google-github-actions/auth@v1"
      #   if: |
      #     github.base_ref == 'main' &&
      #     steps.changed-files.outputs.any_changed == 'true'
      #   with:
      #     credentials_json: "${{ secrets.GCP_SA_KEY }}"

      # Set up environment
      - name: Create PROD environment files
        if: |
          github.base_ref == 'main' &&
          steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo -e "${{ secrets.DOTENV_PRODUCTION }}" > .env
          # echo -e "\nREACT_APP_useEmulator=true" >> .env
          # echo -e "${{ secrets.FUNCTIONS_DOTENV_PRODUCTION }}" > functions/.env

      # Check linting
      # - name: Check for linting errors
      #   if: steps.changed-files.outputs.any_changed == 'true'
      #   run: npm run lint

      # Run a sorry-cypress runner
      - name: Run Cypress on sorry cypress
        uses: cypress-io/github-action@v4
        with:
          start: npm start
          command: npx cypress-cloud run \
                    --record --parallel --browser chrome --key irrelevant \
                    --ci-build-id ${{ github.repository }}-${{ github.run_id }}-${{ github.run_attempt}}

      # If CI failed, upload the videos for debugging
      - name: Testing failed
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: cypress-videos
          path: cypress/videos

      # # Prep env for deployment
      # - name: Remove dev variables pre build
      #   if: steps.changed-files.outputs.any_changed == 'true'
      #   run: |
      #     sed -i 's/^REACT_APP_useEmulator=.*$//g' .env
      #     sed -i 's/^REACT_APP_APPCHECK_DEBUG_TOKEN=.*$//g' .env

      # # If all went well, build and generate a preview link
      # - name: Build website files
      #   if: steps.changed-files.outputs.any_changed == 'true'
      #   env:
      #     NODE_ENV: production
      #     CI: false
      #   run: npm run build

      # - name: Deploy frontend to PROD preview channel
      #   if: |
      #     github.base_ref == 'main' &&
      #     steps.changed-files.outputs.any_changed == 'true'
      #   uses: FirebaseExtended/action-hosting-deploy@v0
      #   with:
      #     repoToken: "${{ secrets.GITHUB_TOKEN }}"
      #     firebaseServiceAccount: "${{ secrets.GCP_SA_KEY }}"
      #     expires: 30d
      #     projectId: default
