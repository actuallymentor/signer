name: Deploy Signer frontend on push/merge

# Only trigger on PR/push and only for frontend files
on:
  # Trigger on PR close
  pull_request:
    types: [ closed ]
    paths:
      - '*.json'
      - '*.js'
      - 'src/**'
      - 'public/**'
      - '.github/workflows/deploy-frontend-prod.yml'
    branches-ignore:
      - '!main'
  
  # Trigger on push to master
  push:
    paths:
      - '*.json'
      - '*.js'
      - 'src/**'
      - 'public/**'
      - '.github/workflows/deploy-frontend-prod.yml'
    branches:
      - main

jobs:
  # Build the frontend giles
  build:
    name: Test, compile & deploy fontend

    runs-on: ubuntu-latest

    steps:
      # Get the repo files from current commit
      - name: Cloning repository
        uses: actions/checkout@v1

      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm

      - name: Set Node.js (.nvmrc)
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"

      - name: Install dependencies
        run: npm i

      - name: Create environment files
        run: |
          echo -e "${{ secrets.DOTENV_PRODUCTION }}" > .env

      # Automated testing
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v15

      - name: Wait for a few minutes in case functions are deploying
        run: |
          if echo "${{ steps.changed-files.outputs.all_changed_files }}" | grep -q "functions/"; then
            echo "Functions files changed, waiting for 4 minutes"
            sleep 240
          else
            echo "No functions changes, not waiting"  
          fi
    
      # Run cypress tests with a retry (in case a functions deploy clash caused the fail)
      - name: Run e2e frontend tests
        run: npm run test:ci
    
      # If CI failed, upload the videos for debugging
      - name: Testing failed
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: cypress-videos
          path: cypress/videos # or path/to/artifact

      # Deployment
      - name: Remove debug token from build
        run: sed -i 's/^REACT_APP_APPCHECK_DEBUG_TOKEN=.*$//g' .env

      - name: Build website files
        env:
          NODE_ENV: production
        run: npm run build

      - name: Deploy to Firebase
        uses: docker://w9jds/firebase-action:master
        with:
          args: deploy --only hosting
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
          